# Generated by Django 5.2.7 on 2025-10-20 11:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplaintReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название причины')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Причина рекламации',
                'verbose_name_plural': 'Причины рекламации',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductionSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название площадки')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Производственная площадка',
                'verbose_name_plural': 'Производственные площадки',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания заявки')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('order_number', models.CharField(max_length=100, verbose_name='Номер заказа')),
                ('client_name', models.CharField(max_length=255, verbose_name='Наименование клиента')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Контактное лицо от клиента')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Телефон контактного лица')),
                ('problem_description', models.TextField(verbose_name='Описание проблемы')),
                ('document_package_link', models.URLField(blank=True, verbose_name='Ссылка на пакет документов')),
                ('commercial_offer', models.FileField(blank=True, null=True, upload_to='complaints/commercial_offers/%Y/%m/', verbose_name='Коммерческое предложение')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В работе'), ('waiting_response', 'Ожидает ответа'), ('resolved', 'Решена'), ('closed', 'Закрыта'), ('rejected', 'Отклонена')], default='new', max_length=20, verbose_name='Статус')),
                ('initiator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='initiated_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Инициатор заявки')),
                ('manager', models.ForeignKey(limit_choices_to={'role': 'manager'}, on_delete=django.db.models.deletion.PROTECT, related_name='managed_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер заказа')),
                ('recipient', models.ForeignKey(help_text='Если инициатор менеджер или монтажник, то автоматически СМ', on_delete=django.db.models.deletion.PROTECT, related_name='received_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Получатель заявки')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.complaintreason', verbose_name='Причина рекламации')),
                ('production_site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='projects.productionsite', verbose_name='Производственная площадка')),
            ],
            options={
                'verbose_name': 'Рекламация',
                'verbose_name_plural': 'Рекламации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Загрузка без сжатия и изменения формата', upload_to='complaints/attachments/%Y/%m/', verbose_name='Файл')),
                ('attachment_type', models.CharField(choices=[('photo', 'Фото'), ('video', 'Видео'), ('document', 'Документ')], max_length=10, verbose_name='Тип вложения')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='projects.complaint', verbose_name='Рекламация')),
            ],
            options={
                'verbose_name': 'Вложение',
                'verbose_name_plural': 'Вложения',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.complaint', verbose_name='Рекламация')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DefectiveProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='Наименование бракованного изделия')),
                ('size', models.CharField(max_length=100, verbose_name='Размер изделия')),
                ('opening_type', models.CharField(blank=True, max_length=100, verbose_name='Открывание')),
                ('problem_description', models.TextField(verbose_name='Описание проблемы')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='defective_products', to='projects.complaint', verbose_name='Рекламация')),
            ],
            options={
                'verbose_name': 'Бракованное изделие',
                'verbose_name_plural': 'Бракованные изделия',
                'ordering': ['complaint', 'order'],
            },
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['-created_at'], name='projects_co_created_e61701_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['status'], name='projects_co_status_685eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['order_number'], name='projects_co_order_n_cf426e_idx'),
        ),
    ]
